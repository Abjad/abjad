<h1>The Abjad <_TieInterface> class</h1>

<subsection>

<p>
The Abjad <_TieInterface> class manages note, rest and chord ties.
</p>

</subsection>

<interface>
<attributes>
   <inherited> first
   <local> head
   <inherited> last
   <inherited> only
   <inherited> spanned
   <inherited> spanner
   <inherited> spanners
   <local> tail
   <local> tied
</attributes>
<methods>
   <inherited> clear
   <inherited> copy
   <inherited> unspan
</methods>
<overloads>
   <local> __eq__
   <inherited> __len__
</overloads>
</interface>


<section>Attributes

<subsection>

<p>
Ties are managed via the <_TieInterface> interface. All Leaves and only Leaves posess this interface.
</p>

<abjad>
   abjad> note = Note(0, (1, 4))
   abjad> note.tie
   _TieInterface
</abjad>

</subsection>

<section>Usage

<subsection>

<p>
Ties can be set in two ways:
</p>

<ol>
   <li>By "wrapping" an Abjad Component (be it a Container or a Leaf) with the <code>Tie</code> spanner (Refer to the Spanners section).</li>
   <li>By setting the tie attribute of a <code>_Leaf</code> instance to True.</li>
</ol>

<abjad>
   abjad> note1 = Note(0, (1, 4))
   abjad> note2 = Note(0, (1, 4))
   abjad> note1.tie = True
   abjad> voice = Voice([note1, note2])
   abjad> show(voice)
</abjad>

<p>
To unset the tie attribute simply set it to False or None.
</p>

<abjad>
   abjad> note1.tie = False
</abjad>

</subsection>

<section>Attributes

<subsection>

<ul>
   <li><code>tied</code></li>
   <li><code>tail</code></li>
   <li><code>head</code></li>
</ul>

<p>
The <code>tied</code> attribute indicates whether the Leaf is being tied to by the Leaf immediately preceding it. 
</p>

<abjad>
   abjad> note1 = Note(0, (1, 4))
   abjad> note2 = Note(0, (1, 4))
   abjad> voice = Voice([note1, note2])
   abjad> note1.tie = True
   abjad> note1.tie.tied 
   False
   abjad> note2.tie.tied 
   True
</abjad>

<p>
The <code>tail</code> attribute indicates whether the Leaf is <code>tied</code> from the previous Leaf and it itself does not have a <code>tie</code> set. 
</p>

<abjad>
   abjad> note1 = Note(0, (1, 4))
   abjad> note2 = Note(0, (1, 4))
   abjad> note3 = Note(0, (1, 4))
   abjad> voice = Voice([note1, note2, note3])
   abjad> note1.tie = True
   abjad> note2.tie = True
   abjad> note1.tie.tail 
   False
   abjad> note2.tie.tail 
   False
   abjad> note3.tie.tail 
   True
</abjad>

<p>
<code>_Leaf.tie.tail</code> is also True when the Leaf being queried is the last in a Tie spanner.
</p>

<p>
The <code>head</code> attribute is analogous but opposite to <code>tail</code>. It is true iff the Leaf has a <code>tie</code> set and is not <code>tied</code> from the previous Leaf. 
</p>

<abjad>
   abjad> note1 = Note(0, (1, 4))
   abjad> note2 = Note(0, (1, 4))
   abjad> note3 = Note(0, (1, 4))
   abjad> voice = Voice([note1, note2, note3])
   abjad> note1.tie = True
   abjad> note2.tie = True
   abjad> note1.tie.head 
   True
   abjad> note2.tie.head 
   False
   abjad> note3.tie.head 
   False
</abjad>

</subsection>

<to-do>

<p>
It might be usefull to have these attributes in <_GlissandoInterface> as well.
</p>

</to-do>
