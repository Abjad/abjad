<title> Working with notes </title>

<h1> Working with notes </h1>

<subsection> Creating notes
<p> Create notes with numeric pitch and duration indicators.
<abjad>
  abjad> note = Note(0, (1, 4))
  hide> measure = Measure(note.duration.pair, [note])
  hide> measure.meter.transparent = True
  hide> show(measure)
</abjad>
</subsection>

<subsection> Changing duration
<p> You can assign values directly to the note duration interface.
<abjad>
  hide> note = Note(0, (1, 4))
  abjad> note.duration = (1, 8)
  hide> measure = Measure(note.duration.pair, [note])
  hide> measure.meter.transparent = True
  hide> show(measure)
</abjad>
<p> You can use any duration token on the right-hand side of such an assignment.
</subsection>

<subsection> Changing pitch
<p> You can assign pitches to a note a note in a couple of different ways.
<abjad>
  abjad> note.pitch = 1
  abjad> note
  Note(cs', 4)
</abjad>
<abjad>
  abjad> note.pitch = Pitch('d', 4)
  abjad> note
  Note(d', 4)
</abjad>
<abjad>
  abjad> note.pitch = ('ds', 4)
  abjad> note
  Note(ds', 4)
</abjad>
</subsection>

<subsection> Duration comparisons
<p> Compare note durations with Python's equality operator.
<abjad>
  abjad> Note(0, (1, 8)) == Note(0, (3, 8))
  False
</abjad>
<p> Greater than, less than and the other comparison operators work as expected.
<abjad>
   abjad> Note(0, (1, 8)) < Note(0, (3, 8))
   True
</abjad>
<p> You can do all the normal things with the note duration interface that you can do with the other Abjad duration interfaces.
These include copying and rewriting.
</subsection>
