<title> The Abjad _Accidental class </title>

<h1> The Abjad <code>_Accidental</code> class </h1>

<p> The Abjad <code>_Accidental</code> class models accidentals.



<section> Public interface

<interface-block>
   <interface-block-header> Attributes
   <local> adjustment
   <local> string
</interface-block>
<interface-block>
   <interface-block-header> Dictionaries
   <local> accidentalStringToAdjustment[ ]
   <local> adjustmentToAccidentalString[ ]
</interface-block>
<interface-block>
   <interface-block-header> Methods
   <local> hasNone( )
</interface-block>
<interface-block>
   <interface-block-header> Overloads
   <local> __eq__
</interface-block>



<section> Attributes



<example>
<example-header>
   <local-header> adjustment
   <p>Read-only attribute defined here.
   <p>Returns number of semitones adjustment carried by <code>self</code>.
</example-header>
<example-body>
   <abjad>
      abjad> note = Note(13, (1, 4))
   </abjad>
   <abjad>
      hide> note = Note(13, (1, 4))
      abjad> note.pitch.accidental.adjustment
      1
      hide> measure = Measure(note.duration.pair, [note])
      hide> measure.meter.transparent = True
      hide> show(measure)
   </abjad>
</example-body>
</example>



<example>
<example-header>
   <local-header> string
   <p> Read-only attribute defined here.
   <p> Returns string representation of <code>self</code>.
</example-header>
<example-body>
   <abjad>
      abjad> note = Note(13, (1, 4))
   </abjad>
   <abjad>
      hide> note = Note(13, (1, 4))
      abjad> note.pitch.accidental.string
      's'
      hide> measure = Measure((1, 4), [note])
      hide> measure.meter.stencil = False
      hide> show(measure)
   </abjad>
</example-body>
</example>



<section> Dictionaries



<example>
<example-header>
   <local-header> accidentalStringToAdjustment[ ]
   <p> Read-only attribute defined here.
   <p> Returns numbers of semitones equal to accidental string.
   <p> Accepts accidental string.
</example-header>
<example-body>
   <abjad>
      abjad> note = Note(13, (1, 4))
   </abjad>
   <abjad>
      abjad> note.pitch.accidental.accidentalStringToAdjustment['tqs']
      1.5
   </abjad>
</example-body>
</example>



<example>
<example-header>
   <local-header> adjustmentToAccidentalString[ ]
   <p> Read-only attribute defined here.
   <p> Returns accidental string corresponding to numeric input adjustment.
   <p> Accepts numeric adjustment.
</example-header>
<example-body>
   <abjad>
      abjad> note = Note(13, (1, 4))
   </abjad>
   <abjad>
      abjad> note.pitch.accidental.adjustmentToAccidentalString[-1]
      'f'
   </abjad>
</example-body>
</example>



<section> Methods



<example>
<example-header>
   <local-header> hasNone( )
   <p> Read-only attribute defined here.
   <p> Returns <code>True</code> when parent note carries no accidental.
</example-header>
<example-body>
   <abjad>
      abjad> note = Note(13, (1, 4))
   </abjad>
   <abjad>
      hide> note = Note(13, (1, 4))
      abjad> note.pitch.accidental.hasNone( )
      False
      hide> measure = Measure((1, 4), [note])
      hide> measure.meter.stencil = False
      hide> show(measure)
   </abjad>
</example-body>
</example>



<section> Overloads



<example>
<example-header>
   <local-header> __eq__
   <p> Read-only attribute defined here.
   <p> Returns <code>True</code> when <code>self</code> equals <code>rhs</code>, otherwise <code>False</code>.
</example-header>
<example-body>
   <abjad>
      abjad> note = Note(13, (1, 4))
   </abjad>
   <abjad>
      hide> note = Note(13, (1, 4))
      abjad> note.pitch.accidental == 's'
      True
      hide> measure = Measure((1, 4), [note])
      hide> measure.meter.stencil = False
      hide> show(measure)
   </abjad>
</example-body>
</example>



<section> Comments

<comment> LilyPond implements several different accidental handling methods.
Abjad outputs LilyPond input with no special indications for accidental handling.
Nontonal music may prefer to use the LilyPond <code>'forget</code> option for handling accidentals.

<comment> Do we have an Abjad-native way of setting <code>'forget</code>?



<section> To do

<to-do> Reimplement Java-style <code>hasNone( )</code> as read-only <code>none</code> attribute.
