<h1>Working with leaf durations</h1>

<subsection>

<p>
Abjad <Note>, <Rest>, <Chord> and <Skip> implement <_LeafDurationInterface> for access to information about the music duration of these classes.
</p>

<abjad>
  abjad> note = Note(0, (1, 16))
  abjad> note.duration
  DurationInterface(1/16)
</abjad>

</subsection>

<subsection>

<p>The most basic information provided by <_LeafDurationInterface> is <i>written duration</i>.
</p>

<abjad>
  abjad> note.duration.written
  Rational(1, 16)
</abjad>

<p>Abjad written duration models the part of a the duration of a music object as contributed by the graphic shape of a music object &mdash; notehead or rest shape, together with any dots, flags or beams. Abjad written duration corresponds most closely to the usual intuitive understanding of music duration.
</p>

</subsection>

<subsection>

<p>Abjad <i>prolated duration</i> models music duration with the inclusion of tuplet brackets.
</p>

<abjad>
  abjad> tuplet = FixedDurationTuplet((1, 8), Note(0, (1, 16)) * 3)
  abjad> tuplet_note = tuplet[0]
  abjad> tuplet_note.duration.written
  Rational(1, 16)
  abjad> tuplet_note.duration.prolated
  Rational(1, 24)
</abjad>

<p>Here we build a triplet and name a reference to the first note within in the triplet. We find the written duration of the first note equal to 1/16 and the prolated duration of the first note equal to 1/24. To see why this is the case, consider that the prolation ratio 3:2 acts as a type compression that squeezes three of something into the time of two of something. Three-in-the-time-of-two compression is the same thing multiplying the written duration of all tuplet members by 2/3. We then see that 1/16 * 2/3 = 1/24. The value of the 2/3 multiplier is available as the <code>prolation</code> attribute of <_LeafDurationInterface>.
</p>

<abjad>
   abjad> tuplet_note.duration.prolation
   Rational(2, 3)
</abjad>

</subsection>
