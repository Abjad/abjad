<h1>The Abjad <Chord> class</h1>

<subsection>

<p>
The Abjad <Chord> class models chords.
</p>

</subsection>

<interface>
<attributes>
   <inherited> accidentals
   <inherited> articulations
   <inherited> barline
   <inherited> beam
   <inherited> clef
   <inherited> comments
   <inherited> dots
   <inherited> duration
   <inherited> dynamics
   <inherited> format
   <local> formatter
   <inherited> glissando
   <inherited> grace
   <inherited> harmonic
   <inherited> leaves
   <inherited> next
   <local> noteheads
   <inherited> number
   <inherited> offset
   <local> pitches
   <inherited> prev
   <inherited> spanners
   <inherited> staff
   <inherited> stem
   <inherited> tempo
   <inherited> tie
   <inherited> tremolo
   <inherited> trill
</attributes>
<methods>
   <local> append
   <inherited> copy
   <local> extend
   <inherited> kind
   <local> pop
   <local> remove
</methods>
<overloads>
   <local> __contains__
   <local> __delitem__
   <local> __getitem__
   <local> __init__
   <local> __len__
   <inherited> __mul__
   <local> __repr__
   <inherited> __rmul__
   <local> __setitem__
   <local> __str__
</overloads>
</interface>

<section>Attributes

<definition>
<header>
   <inherited> accidentals
   <p>NOT IMPLEMENTED</p>
</header>
</definition>

<definition>
<header>
   <inherited> articulations
   <p>Read / write attribute inherited from <_Leaf>.</p>
   <p>Returns Abjad <_ArticulationsInterface>.</p>
   <p>Accepts Python list of zero or more LilyPond articulation strings, <code>None</code>.</p>
   <p>See <a href="../leaf_class/index.html#articulations">example</a>.</p>
</header>
</definition>

<definition>
<header>
   <inherited> barline
   <p>Read / write attribute inherited from <_Component>.</p>
   <p>Returns Abjad <_BarlineInterface>.</p>
   <p>Accepts LilyPond barline string, <code>None</code>.</p>
   <p>See <a href="../leaf_class/index.html#barline">example</a>.</p>
</header>
</definition>

<definition>
<header>
   <inherited> beam
   <p>Read-only attribute inherited from <_Leaf>.</p>
   <p>Returns Abjad <_BeamInterface>.</p>
   <p>See <a href="../leaf_class/index.html#beam">example</a>.</p>
</header>
</definition>

<definition>
<header>
   <inherited> clef
   <p>Read / write attribute inherited from <_Leaf>.</p>
   <p>Returns Abjad <_ClefInterface>.</p>
   <p>Accepts LilyPond clef string, Abjad <_Clef> instance, <code>None</code>.</p>
   <p>See <a href="../leaf_class/index.html#clef">example</a>.</p>
</header>
</definition>

<definition>
<header>
   <inherited> comments
   <p>Read-only attribute inherited from <_Component>.</p>
   <p>Returns Abjad <_Comments>.</p>
   <p>See <a href="../component_class/index.html#comments">example</a>.</p>
</header>
</definition>

<definition>
<header>
   <inherited> dots
   <p>Read-only attribute inherited from <_Leaf>.</p>
   <p>Returns Abjad <_DotsInterface>.</p>
   <p>See <a href="../leaf_class/index.html#dots">example</a>.</p>
</header>
</definition>

<definition>
<header>
   <inherited> duration
   <p>Read / write attribute inherited from <_Leaf>.</p>
   <p>Returns Abjad <_LeafDurationInterface>.</p>
   <p>Accepts <a href="../duration_token/index.html">duration token</a>.</p>
   <p>See <a href="../leaf_class/index.html#duration">example</a>.</p>
</header>
</definition>

<definition>
<header>
   <inherited> dynamics
   <p>Read / write attribute inherited from <_Leaf>.</p>
   <p>Returns Abjad <_DynamicsInterface>.</p>
   <p>Accepts LilyPond dynamics string, <code>None</code>.</p>
   <p>See <a href="../leaf_class/index.html#dynamics">example</a>.</p>
</header>
</definition>

<definition>
<header>
   <inherited> format
   <p>Read-only attribute inherited from <_Component>.</p>
   <p>Returns LilyPond input string.</p>
   <p>See <a href="../component_class/index.html#format">example</a>.</p>
</header>
</definition>

<definition>
<header>
   <local> formatter
   <p>Read-only attribute defined here.</p>
   <p>Returns Abjad <code>_ChordFormatter</code>.</p>
</header>
<body>
<abjad>
   abjad> chord = Chord([0, 2, 10], (1, 4))
</abjad>
<abjad>
   hide> chord = Chord([0, 2, 10], (1, 4))
   abjad> chord.formatter
   _ChordFormatter
</abjad>
</body>
</definition>

<definition>
<header>
   <inherited> glissando
   <p>Read / write attribute inherited from <_Leaf>.</p>
   <p>Returns Abjad <_GlissandoInterface>.</p>
   <p>Accepts <code>True</code>, <code>False</code>.</p>
   <p>Note that LilyPond does not render glissandi between chords.</p>
   <p>See <a href="../leaf_class/index.html#glissando">example</a>.</p>
</header>
</definition>

<definition>
<header>
   <inherited> grace
   <p>Read-only attribute inherited from <_Leaf>.</p>
   <p>Returns Abjad <_GraceInterface>.</p>
   <p>See <a href="../leaf_class/index.html#grace">example</a>.</p>
</header>
</definition>

<definition>
<header>
   <inherited> harmonic
   <p>Read-only attribute inherited from <_Leaf>.</p>
   <p>Returns Abjad <_HarmonicInterface>.</p>
   <p>Accepts <code>True</code>, <code>False</code>.</p>
   <p>See <a href="../leaf_class/index.html#harmonic">example</a>.</p>
</header>
</definition>

<definition>
<header>
   <inherited> leaves
   <p>Read-only attribute inherited from <_Leaf>.</p>
   <p>Returns Python list of all leaves in <code>self</code>.</p>
   <p>See <a href="../leaf_class/index.html">example</a>.</p>
</header>
</definition>

<definition>
<header>
   <inherited> next
   <p>Read-only attribute inherited from <_Leaf>.</p>
   <p>Returns reference to next-in-container leaf after <code>self</code>.</p>
   <p>See <a href="../leaf_class/index.html#next">example</a>.</p>
</header>
</definition>

<definition>
<header>
   <local> noteheads
   <p>Read / write attribute defined here.</p>
   <p>Returns Python list of all noteheads in <code>self</code>.</p>
   <p>Accepts Python list or Python tuple of <a href="../notehead_token/index.html">notehead token</a> instances.</p>
</header>
<body>
<abjad>
   abjad> chord = Chord([0, 2, 10], (1, 4))
   abjad> chord.noteheads = [-1, 3, 9, 11]
</abjad>
<abjad>
   hide> chord = Chord([0, 2, 10], (1, 4))
   hide> chord.noteheads = [-1, 3, 9, 11]
   abjad> chord.noteheads
   [_NoteHead(b), _NoteHead(ef'), _NoteHead(a'), _NoteHead(b')]
   hide> measure = Measure((1, 4), [chord])
   hide> measure.meter.transparent = True
   hide> show(measure)
</abjad>
</body>
</definition>

<definition>
<header>
   <inherited> number
   <p>Read-only attribute inherited from <_Leaf>.</p>
   <p>Returns nonnegative integer equal to zero-indexed in-governor position of <code>self</code>.</p>
   <p>See <a href="../leaf_class/index.html#number">example</a>.</p>
</header>
</definition>

<definition>
<header>
   <inherited> offset
   <p>Read-only attribute inherited from <_Leaf>.</p>
   <p>Returns Abjad <code>Rational</code> representing amount of in-governor musical time prior to start of <code>self</code>.</p>
   <p>See <a href="../leaf_class/index.html">example</a>.</p>
</header>
</definition>

<definition>
<header>
   <local> pitches
   <p>Read / write attribute defined here.</p>
   <p>Returns Python list of all pitches in <code>self</code>.</p>
   <p>Accepts Python list or Python tuple of <a href="../notehead_token/index.html">notehead token</a> instances.</p>
</header>
<body>
<abjad>
   abjad> chord = Chord([0, 2, 10], (1, 4))
   abjad> chord.pitches = [-1, 3, 9, 11]
</abjad>
<abjad>
   hide> chord = Chord([0, 2, 10], (1, 4))
   hide> chord.pitches = [-1, 3, 9, 11]
   abjad> chord.pitches
   [Pitch(b, 3), Pitch(ef, 4), Pitch(a, 4), Pitch(b, 4)]
   hide> measure = Measure((1, 4), [chord])
   hide> measure.meter.transparent = True
   hide> show(measure)
</abjad>
</body>
</definition>

<definition>
<header>
   <inherited> prev
   <p>Read-only attribute inherited from <_Leaf>.</p>
   <p>Returns reference to prev-in-container leaf before <code>self</code>.</p>
   <p>See <a href="../leaf_class/index.html#prev">example</a>.</p>
</header>
</definition>

<definition>
<header>
   <inherited> spanners
   <p>Read-only attribute inherited from <_Leaf>.</p>
   <p>Returns Abjad <_LeafSpannerInterface>.</p>
   <p>See <a href="../leaf_class/index.html#spanner">example</a>.</p>
</header>
</definition>

<definition>
<header>
   <inherited> staff
   <p>Read / write attribute inherited from <_Leaf>.</p>
   <p>Returns reference to Abjad <_Staff>.</p>
   <p>Accepts Abjad <_Staff> reference.</p>
   <p>See <a href="../leaf_class/index.html#staff">example</a>.</p>
</header>
</definition>

<definition>
<header>
   <inherited> stem
   <p>Read-only attribute inherited from <_Leaf>.</p>
   <p>Returns Abjad <_StemInterface>.</p>
   <p>See <a href="../leaf_class/index.html#stem">example</a>.</p>
</header>
</definition>

<definition>
<header>
   <inherited> tempo
   <p>Read / write attribute inherited from <_Component>.</p>
   <p>Returns Abjad <_TempoInterface>.</p>
   <p>Accepts (duration, type) pair.</p>
   <p>See <a href="../component_class/index.html#tempo">example</a>.</p>
</header>
</definition>

<definition>
<header>
   <inherited> tie
   <p>Read-only attribute inherited from <_Leaf>.</p>
   <p>Returns Abjad <_TieInterface>.</p>
   <p>Accepts <code>True</code>, <code>False</code>.</p>
   <p>See <a href="../leaf_class/index.html#tie">example</a>.</p>
</header>
</definition>

<definition>
<header>
   <inherited> tremolo
   <p>Read-only attribute inherited from <_Leaf>.</p>
   <p>Returns Abjad <_TremoloInterface>.</p>
   <p>See <a href="../leaf_class/index.html#tremolo">example</a>.</p>
</header>
</definition>

<definition>
<header>
   <inherited> trill
   <p>Read-only attribute inherited from <_Leaf>.</p>
   <p>Returns Abjad <_TrillInterface>.</p>
   <p>See <a href="../leaf_class/index.html#trill">example</a>.</p>
</header>
</definition>

<section>Methods

<definition>
<header>
   <local> append
   <p>append(<i>nh</i>)</p>
   <p>Public method defined here.</p>
   <p>Interprets <a href="../notehead_token/index.html">notehead token</a> <code><i>nh</i></code> and appends to <code>self</code>.</p>
</header>
<body>
<abjad>
   abjad> chord = Chord([0, 2, 10], (1, 4))
</abjad>
<abjad>
   hide> chord = Chord([0, 2, 10], (1, 4))
   abjad> chord.append(9)
   hide> measure = Measure((1, 4), [chord])
   hide> measure.meter.transparent = True
   hide> show(measure)
</abjad>
</body>
</definition>

<definition>
<header>
   <inherited> copy
   <p>Public method inherited from <_Component>.</p>
   <p>Returns new copy of <code>self</code>.</p>
   <p>See <a href="../component_class/index.html#copy">example</a>.</p>
</header>
</definition>

<definition>
<header>
   <local> extend
   <p>extend(<i>nhs</i>)</p>
   <p>Public method defined here.</p>
   <p>Interprets Python list or Python tuple <code><i>nhs</i></code> of <a href="../notehead_token/index.html">notehead token</a> instances and extends <code>self</code>.</p>
</header>
<body>
<abjad>
   abjad> chord = Chord([0, 2, 10], (1, 4))
</abjad>
<abjad>
   hide> chord = Chord([0, 2, 10], (1, 4))
   abjad> chord.extend([9, 16, 18])
   hide> measure = Measure((1, 4), [chord])
   hide> measure.meter.transparent = True
   hide> show(measure)
</abjad>
</body>
</definition>

<definition>
<header>
   <inherited> kind
   <p>kind(<i>classname</i>)</p>
   <p>Deprecated public method inherited from <_Component>.</p>
   <p>Returns <code>True</code> if <code><i>classname</i></code> in class hierarchy of <code>self</code>, otherwise <code>False</code>.</p>
   <p>Use built-in Python <code>isinstance</code> instead.</p>
</header>
</definition>

<definition>
<header>
   <local> pop
   <p>pop(<i>i = -1</i>)</p>
   <p>Public method defined here.</p>
   <p>Returns and removes notehead at index <code><i>i</i></code> in <code>self</code>.</p>
</header>
<body>
<abjad>
   abjad> chord = Chord([0, 2, 10], (1, 4))
</abjad>
<abjad>
   hide> chord = Chord([0, 2, 10], (1, 4))
   abjad> chord.pop
   _NoteHead(bf')
   hide> measure = Measure((1, 4), [chord])
   hide> measure.meter.transparent = True
   hide> show(measure)
</abjad>
</body>
</definition>

<definition>
<header>
   <local> remove
   <p>remove(<i>notehead</i>)</p>
   <p>Public method defined here.</p>
   <p>Removes <code><i>notehead</i></code> from <code>self</code>.</p>
   <p>Note that <code>remove</code> works by reference rather than by index.</p>
</header>
<body>
<abjad>
   abjad> chord = Chord([0, 2, 10], (1, 4))
</abjad>
<abjad>
   hide> chord = Chord([0, 2, 10], (1, 4))
   abjad> chord.remove(chord[1])
   hide> measure = Measure((1, 4), [chord])
   hide> measure.meter.transparent = True
   hide> show(measure)
</abjad>
</body>
</definition>

<section>Overloads

<definition>
<header>
<p class="example-header">
   <local> __contains__
   <p>__contains__(<i>nh</i>)</p>
   <p>Special method defined here.</p>
   <p>Returns <code>True</code> with <a href="../notehead_token/index.html">notehead token</a> <code><i>nh</i></code> in <code>self</code>, otherwise <code>False</code>.</p>
</header>
<body>
<abjad>
   abjad> chord = Chord([0, 2, 10], (1, 4))
</abjad>
<abjad>
   hide> chord = Chord([0, 2, 10], (1, 4))
   abjad> 10 in chord
   True
   hide> measure = Measure((1, 4), [chord])
   hide> measure.meter.transparent = True
   hide> show(measure)
</abjad>
</body>
</definition>

<definition>
<header>
   <local> __delitem__
   <p>__delitem__(<i>i</i>)</p>
   <p>Special method defined here.</p>
   <p>Delete notehead at index <code><i>i</i></code> in  <code>self</code>.</p>
</header>
<body>
<abjad>
   abjad> chord = Chord([0, 2, 10], (1, 4))
</abjad>
<abjad>
   hide> chord = Chord([0, 2, 10], (1, 4))
   abjad> del(chord[1])
   hide> measure = Measure((1, 4), [chord])
   hide> measure.meter.transparent = True
   hide> show(measure)
</abjad>
</body>
</definition>

<definition>
<header>
<p class="example-header">
   <local> __getitem__
   <p>__getitem__(<i>i</i>)</p>
   <p>Special method defined here.</p>
   <p>Get notehead at index <code><i>i</i></code> in <code>self</code>.</p>
</header>
<body>
<abjad>
   abjad> chord = Chord([0, 2, 10], (1, 4))
</abjad>
<abjad>
   hide> chord = Chord([0, 2, 10], (1, 4))
   abjad> chord[1]
   _NoteHead(d')
   hide> measure = Measure((1, 4), [chord])
   hide> measure.meter.transparent = True
   hide> show(measure)
</abjad>
</body>
</definition>

<definition>
<header>
   <local> __init__
   <p>__init__(<i>args*</i>)</p>
   <p>Special method defined here.</p>
   <p>Initialize <code>self</code> according to one of several input argument patterns:</p>
   <ul>
      <li><code>Chord(<i>pitches</i>, <i>dur</i>)</li>
      <li><code>Chord(<i>note</i>)</li>
      <li><code>Chord(<i>rest</i>)</li>
      <li><code>Chord(<i>skip</i>)</li>
   </ul>
   <p>Where <code><i>pitches</i></code> is a Python list or Python tuple of zero or more <a href="../pitch_token/index.html">pitch token</a> instances, and where <code><i>dur</i></code> is a <a href="../duration_token/index.html">duration token</a>.</p>
</header>
<body>
<abjad>
   abjad> chord = Chord([0, 2, 10], (1, 4))
   hide> measure = Measure((1, 4), [chord])
   hide> measure.meter.transparent = True
   hide> show(measure)
</abjad>
</body>
</definition>

<definition>
<header>
<p class="example-header">
   <local> __len__
   <p>__len__</p>
   <p>Special method defined here.</p>
   <p>Returns nonnegative integer equal to number of noteheads in <code>self</code>.</p>
</header>
<body>
<abjad>
   abjad> chord = Chord([0, 2, 10], (1, 4))
</abjad>
<abjad>
   hide> chord = Chord([0, 2, 10], (1, 4))
   hide> measure = Measure((1, 4), [chord])
   hide> measure.meter.transparent = True
   abjad> len(chord)
   3
</abjad>
</body>
</definition>

<definition>
<header>
   <inherited> __mul__
   <p>__mul__(<i>n</i>)</p>
   <p>Special method inherited from <_Component>.</p>
   <p>Implements left-handed multiplication of <code>self</code>.</p>
   <p>Returns a Python list of <code><i>n</i></code> copies of <code>self</code>.</p>
   <p>See <a href="../component_class/index.html#mul">example</a>.</p>
</header>
</definition>

<definition>
<header>
   <local> __repr__
   <p>__repr__</p>
   <p>Special method defined here.</p>
   <p>Returns string summary of <code>self</code> for interpreter display.</p>
</header>
<body>
<abjad>
   abjad> chord = Chord([0, 2, 10], (1, 4))
</abjad>
<abjad>
   hide> chord = Chord([0, 2, 10], (1, 4))
   abjad> chord
   Chord(c' d' bf', 4)
</abjad>
</body>
</definition>

<definition>
<header>
   <inherited> __rmul__
   <p>__rmul__(<i>n</i>)</p>
   <p>Special method inherited from <_Component>.</p>
   <p>Implements right-handed multiplication on <code>self</code>.</p>
   <p>Returns a Python list of <code><i>n</i></code> copies of <code>self</code>.</p>
   <p>See <a href="../component_class/index.html#rmul">example</a>.</p>
</header>
</definition>

<definition>
<header>
   <local> __setitem__
   <p>__setitem__(<i>i</i>, <i>nh</i>)</p>
   <p>Special method defined here.</p>
   <p>Set <a href="../notehead_token/index.html">notehead token</a> <code><i>nh</i></code> at index <code><i>i</i></code> in <code>self</code>.</p>
</header>
<body>
<abjad>
   abjad> chord = Chord([0, 2, 10], (1, 4))
</abjad>
<abjad>
   hide> chord = Chord([0, 2, 10], (1, 4))
   abjad> chord[1] = 4
   hide> measure = Measure((1, 4), [chord])
   hide> measure.meter.transparent = True
   hide> show(measure)
</abjad>
</body>
</definition>

<definition>
<header>
   <local> __str__
   <p>__str__</p>
   <p>Special method defined here.</p>
   <p>Returns string summary of <code>self</code>.</p>
</header>
<body>
<abjad>
   abjad> chord = Chord([0, 2, 10], (1, 4))
</abjad>
<abjad>
   hide> chord = Chord([0, 2, 10], (1, 4))
   abjad> str(chord)
   "&lt;c' d' bf'&gt;4"
   hide> measure = Measure((1, 4), [chord])
   hide> measure.meter.transparent = True
   hide> show(measure)
</abjad>
</body>
</definition>

<comments>

<p>
See the <Chord> class in <code>chord/chord.py</code> for implementation details.
</p>

</comments>

<to-do>

<p>
Implement <code>accidentals</code> in <code>_ChordFormatter</code>.
</p>

<p>
Write and link to chapter on <strong>tempo token input</strong>.
</p>

</to-do>
