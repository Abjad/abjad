#! /usr/bin/env python

import os


def _check_test_case_names( ):
   total_test_modules = 0
   total_test_cases = 0
   total_nonmatching_names = 0
   for path, subdirectories, files in os.walk('.'):
      test_modules = [ ]
      for f in files:
         if f.startswith('test_') and f.endswith('.py'):
            test_modules.append(f)
      total_test_modules += len(test_modules)
      for test_module in test_modules:
         test_cases_in_current_module = 0
         full_module_name = os.path.join(path, test_module)
         short_module_name = test_module[:-3]
         desired_test_case_prefix = short_module_name
         #print 'desired: %s' % desired_test_case_prefix
         fp = file(full_module_name, 'r')
         lines = fp.readlines( )
         for line in lines:
            if line.startswith('def test'):
               test_cases_in_current_module += 1
               test_case_name = line.strip( )
               test_case_name = test_case_name[4:]
               test_case_name = test_case_name[:-4]
               actual_test_case_prefix = line.strip( )
               actual_test_case_prefix = actual_test_case_prefix[4:]
               actual_test_case_prefix = actual_test_case_prefix[:-7]
               if not actual_test_case_prefix == desired_test_case_prefix:
                  total_nonmatching_names += 1
                  print 'NONMATCHING: %s %s' % (
                     test_module, test_case_name)
         total_test_cases += test_cases_in_current_module

   print ''
   print '%s total test modules.' % total_test_modules
   print '%s total test cases.' % total_test_cases
   print '%s total nonmatching test case name.' % total_nonmatching_names
      


def _fix_test_case_names( ):
   pass



if __name__ == '__main__':
   os.system('clear')
   _check_test_case_names( )
   _fix_test_case_names( )
   print ''
