Writing "hello, world!" in LilyPond
===================================

Working with Abjad means working with LilyPond.
This tutorial introduces LilyPond at the command line.


Checking installation
---------------------

To start we'll need to make sure LilyPond is installed.

Open the terminal and type ``lilypond --version``::

    $ lilypond --version
    GNU LilyPond 2.17.3

    Copyright (c) 1996--2012 by
      Han-Wen Nienhuys <hanwen@xs4all.nl>
      Jan Nieuwenhuizen <janneke@gnu.org>
      and others.

    This program is free software.  It is covered by the GNU General Public
    License and you are welcome to change it and/or distribute copies of it
    under certain conditions.  Invoke as `lilypond --warranty' for more
    information.

LilyPond responds with version and copyright information.
If the terminal tells you that LilyPond is not found then
either LilyPond isn't installed on your computer or else
your computer doesn't know where LilyPond is installed.

If you haven't installed LilyPond go to ``www.lilypond.org``
and download the current version of LilyPond for your operating system.

If your computer doesn't know where LilyPond is installed
then you'll have to tell your computer where LilyPond is.
Doing this depends on your operating system.
If you're running MacOS X then you need to make sure that the
location of the LilyPond binary is present in your ``PATH``
environment variable.
Environment variables tell your operating system where different
things are installed or how they are configured. 
Most environment variables are named in all caps.
You can see the contents of your path like this::

    $ echo $PATH

If you don't know how to add things to your path you should Google
for the instructions that are right for your computer or ask a friend.


Creating text files
-------------------

Before you can write "hello, world!" in LilyPond you'll need to know how to create a text file.
This will be good practice for later since much of the work of using Abjad 
centers around making text files.

The way you choose to create text files when you work with Abjad, Python and LilyPond is up to you.

Many programmers with a UNIX or Linux background like to edit with ``vi``, ``pico`` or ``emacs``.
Macintosh programmers sometimes prefer ``TextMate``.
Barebones but workable options include ``TextEdit`` on the Mac and ``WordPad`` on Windows.

If this is your first time programming then you might want to Google and read
about other programmers' favorite text editors or ask a friend with some programming experience.
Whatever text editor you choose make sure your editor is set to produce plain text files.
Do not set your text editor to produce ``.rtf`` or other types of file.

Where you choose to create text files when you work with Abjad, Python and LilyPond is also up to you.

As you work with Abjad your projects will become increasingly elaborate and will contain
increasingly many text files.
Eventually you will probably want to create a dedicated set of directories to organize your work.
But for now it's fine to create your first LilyPond file somewhere that is familiar to you
like your desktop or documents folder.


Writing "hello, world!"
-----------------------

Change to whatever directory you'd like and then use your text editor 
to create a new file called ``hello_world.ly``.

Type the following lines of LilyPond code into ``hello_world.ly``::

    \version "2.17.3"
    \language "english"

    \score {
        \new Score <<
            \new Staff { 
                c'4
            }
        >>
    }

Save ``hello_world.ly`` when you're done.

Note the following::

    1. LilyPond files end in .ly by convention.
    2. The version string you type must match the LilyPond version your found above.
    3. The English language command tells LilyPond to use English note names.
    4. The score block tells LilyPond that you're entering actual music.
    5. The curly braces and double-angle braces indicate sequential and simultaneous music.
    6. The expression c'4 tells LilyPond to create a quarter note middle C.
    7. You can use either spaces or tabs while you type.


Calling LilyPond
----------------

Open the terminal and call LilyPond on ``hello_world.ly``::

    $ lilypond hello_world.ly
    GNU LilyPond 2.17.3
    Processing `hello_world.ly'
    Parsing...
    Interpreting music...
    Preprocessing graphical objects...
    Finding the ideal number of pages...
    Fitting music on 1 page...
    Drawing systems...
    Layout output to `hello_world.ps'...
    Converting to `./hello_world.pdf'...
    Success: compilation successfully completed

LilyPond reads ``hello_world.ly`` as input and creates ``hello_world.pdf`` as output.


Opening the PDF
---------------

Open the ``hello_world.pdf`` file that LilyPond created.

You can do this by clicking on the file.
Or you can use the terminal to open the file from the command line.

If you're using MacOS X you can open ``hello_world.pdf`` like this::

    $ open hello_world.pdf

<abjad>[hide=true]
note = Note("c'4")
show(note)
</abjad>

Your operating system will show you the first one-note score you've created.

The file we created here shows how to work with LilyPond at the command line::

    1. create a LilyPond input file ending in .ly
    2. use LilyPond to create a PDF from you .ly
    3. open the PDF and inspect your work
    4. repeat 1 - 3 as necessary

No matter how complex your scores this will be the basic way you work with LilyPond.
