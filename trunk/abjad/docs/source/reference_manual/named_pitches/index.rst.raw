Named pitches
=============

Named pitches are the everyday pitches attached to notes and chords:

<abjad>
note = Note("cs''8")
show(note)
</abjad>

<abjad>
note.written_pitch
</abjad>


Creating named pitches
----------------------

Create named pitches like this:

<abjad>
named_pitch = NamedPitch("cs''")
</abjad>

<abjad>
named_pitch
</abjad>


Inspecting the name of a named pitch
------------------------------------

Use ``str()`` to get the name of named pitches:

<abjad>
str(named_pitch)
</abjad>


Inspecting the octave of a named pitch
--------------------------------------

Get the octave number of named pitches with ``octave_number``:

<abjad>
named_pitch.octave_number
</abjad>


Sorting named pitches
---------------------

Named pitches sort by octave, diatonic pitch-class and accidental:

<abjad>
pitchtools.NamedPitch('es') < pitchtools.NamedPitch('ff')
</abjad>


Comparing named pitches
-----------------------

You can compare named pitches to each other:

<abjad>
named_pitch_1 = pitchtools.NamedPitch("c''")
named_pitch_2 = pitchtools.NamedPitch("d''")
</abjad>

<abjad>
named_pitch_1 == named_pitch_2
</abjad>

<abjad>
named_pitch_1 != named_pitch_2
</abjad>

<abjad>
named_pitch_1 > named_pitch_2
</abjad>

<abjad>
named_pitch_1 < named_pitch_2
</abjad>

<abjad>
named_pitch_1 >= named_pitch_2
</abjad>

<abjad>
named_pitch_1 <= named_pitch_2
</abjad>


Converting a named pitch to a numbered pitch
--------------------------------------------

Convert a named pitch to a numbered pitch like this:

<abjad>
named_pitch.numbered_pitch
</abjad>

Or like this:

<abjad>
pitchtools.NumberedPitch(named_pitch)
</abjad>


Converting a named pitch to a named pitch-class
-----------------------------------------------

Convert a named pitch to a named pitch-class like this:

<abjad>
named_pitch.named_pitch_class
</abjad>

Or like this:

<abjad>
pitchtools.NamedPitchClass(named_pitch)
</abjad>


Converting a named pitch to a numbered pitch-class
--------------------------------------------------

Convert a named pitch to a numbered pitch-class like this:

<abjad>
named_pitch.numbered_pitch_class
</abjad>

Or like this:

<abjad>
pitchtools.NumberedPitchClass(named_pitch)
</abjad>


Copying named pitches
---------------------

Use ``copy.copy()`` to copy named pitches:

<abjad>
import copy
</abjad>

<abjad>
copy.copy(named_pitch)
</abjad>

Or use ``copy.deepcopy()`` to do the same thing.


Accidental abbreviations
------------------------

Abjad abbreviates accidentals according to the LilyPond ``english.ly`` module:

    ======================         ============================
    accidental name                  abbreviation
    ======================         ============================
    quarter sharp                  'qs'
    quarter flat                   'qf'
    sharp                          's'
    flat                           'f'
    three-quarters sharp           'tqs'
    three-quarters flat            'tqf'
    double sharp                   'ss'
    double flat                    'ff'
    ======================         ============================


Pitch numbers
-------------

Abjad numbers pitches like this:

<abjad>
score, treble_staff, bass_staff = scoretools.make_empty_piano_score()
duration = Duration(1, 32)
</abjad>

<abjad>
pitches = range(-12, 12 + 1)
abjad_configuration.set_default_accidental_spelling('sharps')
</abjad>

<abjad>
for pitch in pitches:
    note = Note(pitch, duration)
    rest = Rest(duration)
    clef = pitchtools.suggest_clef_for_named_pitches([note.written_pitch])
    if clef == contexttools.ClefMark('treble'):
        treble_staff.append(note)
        bass_staff.append(rest)
    else:
        treble_staff.append(rest)
        bass_staff.append(note)
    pitch_number = note.written_pitch.pitch_number
    markup = markuptools.Markup(str(pitch_number), Down)
    markup = markup.attach(bass_staff[-1])
</abjad>

<abjad>
score.override.beam.transparent = True
score.override.time_signature.stencil = False
score.override.flag.transparent = True
score.override.rest.transparent = True
score.override.stem.stencil = False
score.override.text_script.staff_padding = 6
score.set.proportional_notation_duration = schemetools.SchemeMoment(1, 56)
</abjad>

<abjad>
lilypond_file = lilypondfiletools.make_basic_lilypond_file(score)
lilypond_file.global_staff_size = 15
show(lilypond_file)
</abjad>


Diatonic pitch numbers
----------------------

Abjad numbers diatonic pitches like this:

<abjad>
score, treble_staff, bass_staff = scoretools.make_empty_piano_score()
duration = Duration(1, 32)
</abjad>

<abjad>
pitches = []
diatonic_pitches = [0, 2, 4, 5, 7, 9, 11]
</abjad>

<abjad>
pitches.extend([-24 + x for x in diatonic_pitches])
pitches.extend([-12 + x for x in diatonic_pitches])
pitches.extend([0 + x for x in diatonic_pitches])
pitches.extend([12 + x for x in diatonic_pitches])
pitches.append(24)
abjad_configuration.set_default_accidental_spelling('sharps')
</abjad>

<abjad>
for pitch in pitches:
    note = Note(pitch, duration)
    rest = Rest(duration)
    clef = pitchtools.suggest_clef_for_named_pitches([note.written_pitch])
    if clef == contexttools.ClefMark('treble'):
        treble_staff.append(note)
        bass_staff.append(rest)
    else:
        treble_staff.append(rest)
        bass_staff.append(note)
    diatonic_pitch_number = note.written_pitch.diatonic_pitch_number
    markup = markuptools.Markup(str(diatonic_pitch_number), Down)
    markup = markup.attach(bass_staff[-1])
</abjad>

<abjad>
score.override.beam.transparent = True
score.override.time_signature.stencil = False
score.override.flag.transparent = True
score.override.rest.transparent = True
score.override.stem.stencil = False
score.override.text_script.staff_padding = 6
score.set.proportional_notation_duration = schemetools.SchemeMoment(1, 52)
</abjad>

<abjad>
lilypond_file = lilypondfiletools.make_basic_lilypond_file(score)
lilypond_file.global_staff_size = 15
show(lilypond_file)
</abjad>


Octave designation
------------------

Abjad designates octaves with both numbers and ticks:

    ===============        =============
    Octave notation        Tick notation
    ===============        =============
    C7                     c''''
    C6                     c'''
    C5                     c''
    C4                     c'
    C3                     c
    C2                     c,
    C1                     c,,
    ===============        =============


Accidental spelling
-------------------

Abjad chooses between enharmonic spellings at pitch-initialization
according to the following table:

    ============================        ====================================
    Pitch-class number                  Pitch-class name (default)
    ============================        ====================================
    0                                   C
    1                                   C#
    2                                   D
    3                                   Eb
    4                                   E
    5                                   F
    6                                   F#
    7                                   G
    8                                   Gb
    9                                   A
    10                                  Bb
    11                                  B
    ============================        ====================================

<abjad>
staff = Staff([Note(n, (1, 8)) for n in range(12)])
show(staff)
</abjad>

Use ``mutate()`` to respell with sharps:

<abjad>
mutate(staff).respell_with_sharps()
show(staff)
</abjad>

Or flats:

<abjad>
mutate(staff).respell_with_flats()
show(staff)
</abjad>
