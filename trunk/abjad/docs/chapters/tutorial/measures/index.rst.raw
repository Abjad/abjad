Three types of measure
======================


Rigid measures
--------------

The easiest way to build a measure full of music is with
:class:`~abjad.RigidMeasure`.  
To use a rigid measure, you need to know the duration of the 
measure you want to make before you make it.

<abjad>
measure = Measure((3, 8), macros.scale(3))
print measure.format
show(measure)
write_ly(measure, '1') <hide
</abjad>


Dynamic measures
----------------

If you want a measure that grows and shinks as you add  and remove music,
you can use a :class:`~abjad.DynamicMeasure`.

<abjad>
measure = DynamicMeasure(macros.scale(4))
print measure.format
show(measure)
write_ly(measure, '2') <hide
</abjad>

<abjad>
measure.pop(-1)
print measure.format
show(measure)
write_ly(measure, '3') <hide
</abjad>


Anonymous measures
------------------

If you want this same dynamic behavior in a measure that hides 
its time signature, use an
:class:`~abjad.AnonymousMeasure`.

<abjad>
measure = AnonymousMeasure(macros.scale(4))
print measure.format
show(measure)
write_ly(measure, '4') <hide
</abjad>

<abjad>
measure.pop(-1)
print measure.format
show(measure)
write_ly(measure, '5') <hide
</abjad>
