Pitches
=======

Named chromatic pitches are the everyday pitches attached to notes and chords:

<abjad>
note = Note("cs''8")
</abjad>

<abjad>
note.written_pitch
print repr(note.written_pitch) <hide
</abjad>


Creating pitches
----------------

Use pitch tools to create named chromatic pitches:

<abjad>
named_chromatic_pitch = pitchtools.NamedChromaticPitch("cs''")
</abjad>

<abjad>
named_chromatic_pitch
print repr(named_chromatic_pitch) <hide
</abjad>


Inspecting the name of a pitch
------------------------------

Use ``str()`` to get the name of named chromatic pitches:

<abjad>
str(named_chromatic_pitch)
print str(named_chromatic_pitch) <hide
</abjad>


Inspecting the octave of a pitch
--------------------------------

Get the octave number of named chromatic pitches with ``octave_number``:

<abjad>
named_chromatic_pitch.octave_number
print named_chromatic_pitch.octave_number <hide
</abjad>


Working with pitch deviation
----------------------------

Use deviation to model the fact that two pitches differ by a fraction of a semitone:

<abjad>
note_1 = Note(24, (1, 2))
note_2 = Note(24, (1, 2))
staff = Staff([note_1, note_2])
</abjad>

<abjad>
show(staff)
iotools.write_expr_to_ly(staff, 'pitch-deviation-1') <hide
</abjad>

<abjad>
note_2.written_pitch = pitchtools.NamedChromaticPitch(24, deviation = -31)
</abjad>

The pitch of the the first note is greater than the pitch of the second:

<abjad>
note_1.written_pitch > note_2.written_pitch
print repr(note_1.written_pitch > note_2.written_pitch) <hide
</abjad>

Use markup to include indications of pitch deviation in your score:

<abjad>
markuptools.Markup(note_2.written_pitch.deviation_in_cents, 'up')(note_2)
iotools.write_expr_to_ly(staff, 'pitch-deviation-2') <hide
</abjad>


Sorting pitches
---------------

Named chromatic pitches sort by octave, diatonic pitch-class and accidental,
in that order:

<abjad>
pitchtools.NamedChromaticPitch('es') < pitchtools.NamedChromaticPitch('ff')
print repr(pitchtools.NamedChromaticPitch('es') < pitchtools.NamedChromaticPitch('ff')) <hide
</abjad>


Comparing pitches
-----------------

Compare named chromatic pitches to each other:

<abjad>
named_chromatic_pitch_1 = pitchtools.NamedChromaticPitch("c''")
named_chromatic_pitch_2 = pitchtools.NamedChromaticPitch("d''")
</abjad>

<abjad>
named_chromatic_pitch_1 == named_chromatic_pitch_2
print repr(named_chromatic_pitch_1 == named_chromatic_pitch_2) <hide
</abjad>

<abjad>
named_chromatic_pitch_1 != named_chromatic_pitch_2
print repr(named_chromatic_pitch_1 != named_chromatic_pitch_2) <hide
</abjad>

<abjad>
named_chromatic_pitch_1 > named_chromatic_pitch_2
print repr(named_chromatic_pitch_1 > named_chromatic_pitch_2) <hide
</abjad>

<abjad>
named_chromatic_pitch_1 < named_chromatic_pitch_2
print repr(named_chromatic_pitch_1 < named_chromatic_pitch_2) <hide
</abjad>

<abjad>
named_chromatic_pitch_1 >= named_chromatic_pitch_2
print repr(named_chromatic_pitch_1 >= named_chromatic_pitch_2) <hide
</abjad>

<abjad>
named_chromatic_pitch_1 <= named_chromatic_pitch_2
print repr(named_chromatic_pitch_1 <= named_chromatic_pitch_2) <hide
</abjad>


Converting one type of pitch to another
---------------------------------------

Convert any named chromatic pitch to a named diatonic pitch:

<abjad>
named_chromatic_pitch.named_diatonic_pitch
print repr(named_chromatic_pitch.named_diatonic_pitch) <hide
</abjad>

To a numbered chromatic pitch:

<abjad>
named_chromatic_pitch.numbered_chromatic_pitch
print repr(named_chromatic_pitch.numbered_chromatic_pitch) <hide
</abjad>

Or to a numbered diatonic pitch:

<abjad>
named_chromatic_pitch.numbered_diatonic_pitch
print repr(named_chromatic_pitch.numbered_diatonic_pitch) <hide
</abjad>


Converting pitches to pitch-classes
-----------------------------------

Convert any named chromatic pitch to a named chromatic pitch-class:

<abjad>
named_chromatic_pitch.named_chromatic_pitch_class
print repr(named_chromatic_pitch.named_chromatic_pitch_class) <hide
</abjad>

To a named diatonic pitch-class:

<abjad>
named_chromatic_pitch.named_diatonic_pitch_class
print repr(named_chromatic_pitch.named_diatonic_pitch_class) <hide
</abjad>

To a numbered chromatic pitch-class:

<abjad>
named_chromatic_pitch.numbered_chromatic_pitch_class
print repr(named_chromatic_pitch.numbered_chromatic_pitch_class) <hide
</abjad>

Or to a numbered diatonic pitch-class:

<abjad>
named_chromatic_pitch.numbered_diatonic_pitch_class
print repr(named_chromatic_pitch.numbered_diatonic_pitch_class) <hide
</abjad>


Copying pitches
---------------

Use ``copy.copy()`` to copy named chromatic pitches:

<abjad>
import copy
</abjad>

<abjad>
copy.copy(named_chromatic_pitch)
print repr(copy.copy(named_chromatic_pitch)) <hide
</abjad>

Or use ``copy.deepcopy()`` to do the same thing.
