<h1>The Abjad <Pitch> class</h1>

<subsection>

<p>
The Abjad <Pitch> class defines the following public interface.
</p>

</subsection>

<interface>
<attributes>
   <local> accidental
   <local> degree
   <local> letter
   <local> lily
   <local> name
   <local> number
   <local> octave
   <local> pair
   <local> pc
   <local> ticks
   <local> tools
</attributes>
<methods>
   <local> diatonicTranspose
   <local> staffSpaceTranspose
</methods>
</interface>

<section>Attributes

<definition>
<header>
   <local>accidental
   <p>Read / write attribute defined here.
   <p>Returns Abjad <Accidental> reference.
   <p>Accepts Abjad <Accidental> reference, LilyPond accidental string.
</header>
<body>
<abjad>
   abjad> p = Pitch(1)
   abjad> p.accidental
   Accidental(s)
</abjad>
</body>
</definition>

<definition>
<header>
   <local>degree
   <p>Read-only attribute defined here.
   <p>Returns integer diatonic scale degree, regardless of accidental.
</header>
<body>
<abjad>
   abjad> p = Pitch(1)
   abjad> p.degree
   1
</abjad>
</body>
</definition>

<definition>
<header>
   <local>letter
   <p>Read / write attribute defined here.
   <p>Returns letter name of pitch as string.
   <p>Accepts letter name of pitch as string.
</header>
<body>
<abjad>
   abjad> p = Pitch(1)
   abjad> p.letter
   'c'
</abjad>
</body>
</definition>

<definition>
<header>
   <local>lily
   <p>Read-only attribute defined here.
   <p>Returns LilyPond name and octave of pitch as string.
</header>
<body>
<abjad>
   abjad> p = Pitch(1)
   abjad> p.lily
   "cs'"
</abjad>
</body>
</definition>

<definition>
<header>
   <local>name
   <p>Read-only attribute defined here.
   <p>Returns LilyPond name of pitch as string.
</header>
<body>
<abjad>
   abjad> p = Pitch(1)
   abjad> p.lily
   'cs'
</abjad>
</body>
</definition>

<definition>
<header>
   <local>number
   <p>Read / write attribute defined here.
   <p>Returns integer number of pitch.
   <p>Accepts integer pitch number.
   <p>Middle C equals 0.
</header>
<body>
<abjad>
   abjad> p = Pitch(1)
   abjad> p.number
   1
</abjad>
</body>
</definition>

<definition>
<header>
   <local>octave
   <p>Read / write attribute defined here.
   <p>Returns integer octave number of pitch.
   <p>Octave of middle C equals 4.
</header>
<body>
<abjad>
   abjad> p = Pitch(1)
   abjad> p.octave
   4
</abjad>
</body>
</definition>

<definition>
<header>
   <local>pair
   <p>Read-only attribute defined here.
   <p>Returns string name, integer octave tuple of pitch.
   <p>Functions as unique signature of pitch.
</header>
<body>
<abjad>
   abjad> p = Pitch(1)
   abjad> p.pair
   ('cs', 4)
</abjad>
</body>
</definition>

<definition>
<header>
   <local>pc
   <p>Read-only attribute defined here.
   <p>Returns nonnegative equal-tempered integer pitch-class of pitch.
</header>
<body>
<abjad>
   abjad> p = Pitch(1)
   abjad> p.pc
   1
</abjad>
</body>
</definition>

<definition>
<header>
   <local>ticks
   <p>Read-only attribute defined here.
   <p>Returns tick octave indication string.
</header>
<body>
<abjad>
   abjad> p = Pitch(1)
   abjad> p.ticks
   "'"
</abjad>
</body>
</definition>

<definition>
<header>
   <local>tools
   <p>Read-only attribute defined here.
   <p>Returns Abjad <code>_PitchTools</code> instance.
</header>
<body>
<abjad>
   abjad> p = Pitch(1)
   abjad> p.tools
   _PitchTools( )
</abjad>
</body>
</definition>

<section>Methods

<definition>
<header>
   <local>diatonicTranspose
   <p>Public method defined here.</p>
   <p>Returns new Abjad <Pitch> instance transposed at interval.
</header>
<body>
<abjad>
   abjad> p = Pitch(1)
   abjad> p.diatonicTranspose('perfect fourth')
   Pitch(fs, 4)
</abjad>
</body>
</definition>

<definition>
<header>
   <local>staffSpaceTranspose
   <p>Public method defined here.</p>
   <p>Returns new Abjad <Pitch> instance.
   <p>First argument gives number of staff spaces at which to renotate.
   <p>Second argument gives accidental alteration at which to transpose.
</header>
<body>
<abjad>
   abjad> p = Pitch(1)
   abjad> p.staffSpaceTranspose(1, 0.5)
   Pitch(dqf, 4)
</abjad>
</body>
</definition>

<comments>

<p>
See the <Pitch> class in <code>pitch/pitch.py</code> for implementation details.
</p>

</comments>

<to-do>

<p>
Reimplement <code>tools</code> as helpers.
</p>

<p>
Reimplement the bound methods here as helpers.
</p>

<p>
Reimplement <code>degree</code> as read / write.
</p>

<p>
Reimplement <code>name</code> as read / write.
</p>

<p>
Reimplement <code>number</code> as read / write.
</p>

<p>
Make <Accidental> class public.
</p>

</to-do>
