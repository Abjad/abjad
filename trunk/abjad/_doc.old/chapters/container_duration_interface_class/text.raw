<h1>The Abjad <_ContainerDurationInterface> class</h1>

<subsection>

<p>
The Abjad <_ContainerDurationInterface> models the functionality that all container duration interfaces share.
</p>

</subsection>

<interface>
<attributes>
   <local> contents
   <local> multiplier
   <inherited> prolated
   <inherited> prolation
   <inherited> prolations
</attributes>
</interface>

<section>Attributes

<subsection>

<abjad>
   abjad> container = Container(Note(0, (1, 8)) * 5)
   abjad> tuplet = FixedDurationTuplet((5, 8), [container, Note(0, (1, 8))])
   abjad> measure = Measure((5, 8), [tuplet])
   abjad> staff = RhythmicStaff([measure])
   abjad> container
   (c'8, c'8, c'8, c'8, c'8)
   abjad> show(staff)
</abjad>

</subsection>

<definition>
<header>
   <local> contents
</header>
<body>
<abjad>
   abjad> container.duration.contents
   Rational(5, 8)
</abjad>
</body>
</definition>

<definition>
<header>
   <local> multiplier
</header>
<body>
<abjad>
   abjad> container.duration.multiplier
   Rational(1, 1)
</abjad>
</body>
</definition>

<definition>
<header>
   <inherited> prolated
</header>
<body>
<abjad>
   abjad> container.duration.prolated
   Rational(25, 48)
</abjad>
</body>
</definition>

<definition>
<header>
   <inherited> prolation
</header>
<body>
<abjad>
   abjad> conatiner.duration.prolation
   Rational(5, 6)
</abjad>
</body>
</definition>

<definition>
<header>
   <inherited> prolations
</header>
<body>
<abjad>
   abjad> conatiner.duration.prolation
   [Rational(5, 6)]
</abjad>
</body>
</definition>

<comments>

<p>
The container duration interface implements a trivial read-only <code>multiplier</code> attribute, always equal to 1, to clean up parent-climbing algorithms like <code>excise( )</code>.
</p>

<p>
See the <_ContainerDurationInterface> class in <code>containers/duration.py</code> for implementation details.
</p>

</comments>
