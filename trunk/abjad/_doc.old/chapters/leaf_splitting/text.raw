<h1>Leaf Splitting</h1>

<subsection>

<p>
An Abjad <_Leaf> with duration <em>d</em> can be split in two Leaves with durations <em>e</em> and <em>f</em> such that <em>e</em> + <em>f</em> = <em>d</em>.
</p>

<p>
There are two helper functions for doing this: 
<code>leaftools.split( )</code> 
and
<code>leaftools.split_binary( )</code>.
</p>

<p>
Both functions take two parameters: the duration <code>(n, d)</code> at which the <_Leaf> will be broken, and the <code>Leaf</code> to break.
</p>

<p>
<code>leaftools.split( )</code> will accept any duration smaller than the duration of the <_Leaf> to split. 
</p>

<p>
<code>leaftools.split_binary( )</code> will only take durations with a power of 2 as denominator.
</p>

<p>
Both functions behave the same way when resulting durations <em>e</em> and <em>f</em> are <b>notehead-assignable</b> 
(i.e. <em>e</em> &#8712;
(<b>D<sub>1</sub></b> &#8746;
<b>D<sub>2</sub></b>)
), 
</p>

<table width="100%">
<tr>
   <th><code>leaftools.split( )</code></th>
   <th><code>leaftools.split_binary( )</code></th>
</tr>
<tr>
   <td>
      <pre>
         abjad> n = Note(0, (1, 4))
         abjad> leaftools.split((1, 8), n)
         [Note(c', 8), Note(c', 8)]
      </pre>
   </td>
   <td>
      <pre>
         abjad> n = Note(0, (1, 4))
         abjad> leaftools.split_binary((1, 8), n)
         [[Note(c', 8)], [Note(c', 8)]]
      </pre>
   </td>
</tr>
</table>

<p>
Notice that <code>leaftools.split( )</code> returns a list of 2 Leaves, while
<code>leaftools.split_binary( )</code> returns a list of two lists, each with a <_Leaf> in this case.
The reason for this will become clear.
</p>

<p>
When the duration attribute is not <b>notehead-assignable</b>, <code>leaftools.split( )</code> will wrap the splitted Leaves in a Tuplet;
</p>

<p>
<code>leaftools.split_binary( )</code> will return splitted Leaves.
</p>

<table width="100%">
<tr>
   <th><code>leaftools.split( )</code></th>
   <th><code>leaftools.split_binary( )</code></th>
</tr>
<tr>
   <td>
      <pre>
         abjad> n = Note(0, (1, 4))
         abjad> leaftools.split((5, 32), n)
         [FixedDurationTuplet(5/32, [c'4]), Note(c', 16.)]
      </pre>
   </td>
   <td>
      <pre>
         abjad> n = Note(0, (1, 4))
         abjad> leaftools.split_binary((5, 32), n)
         [[Note(c', 8), Note(c', 32)], [Note(c', 16.)]]
      </pre>
   </td>
</tr>
</table>

</subsection>


<to-do>

<p>
Do we really need <code>leaftools.split_binary( )</code> to return a list of two lists? Why not just a flat list of leaves?
</p>

</to-do>
