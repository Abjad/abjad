<h1>The Leaf Container Spanner (LCS) Model</h1>

<section> The LCS by example

<subsection> Example 1
<p>
At the heart of Abjad's Symbolic Score-Control lies a powerful model that we call the Leaf Container Spanner, or LCS, model of the musical score.
To understand the whys and hows of the LCS model implemented in Abjad, it is probably easier to base the discussion on concrete musical examples. 
Let's begin with a simple and rather abstract musical fragment: a measure with nested tuplets.
</p>

<abjad>
   hide> t21 = FixedMultiplierTuplet((4, 5), Note(0, (1, 8)) * 5)
   hide> Beam(t21)
   hide> t22 = FixedMultiplierTuplet((2, 3), Note(0, (1, 8)) * 3)
   hide> Beam(t22)
   hide> t23 = FixedMultiplierTuplet((4, 5), Note(0, (1, 16)) * 5)
   hide> Beam(t23)
   hide> t1  = FixedMultiplierTuplet((2, 3), [t21, t22, t23, Note(0, (1, 2))])
   hide> s = RhythmicStaff([t1])
   hide> show(s)
</abjad>

<p>
What we see in this little fragment is a measure with 4/4 meter, 14 notes and four tuplet brackets prolating the notes. 
The three bottom tuplets (with ratios 5:4, 3:2, 5:4) prolate all but the last note. The topmost tuplet prolates all the notes in the measure and combines with the bottom three tuplets to doubly prolate all but the last note.   
We can think of the topmost tuplet as prolating three tuplets, each of which in turn prolates a group of notes.
We can think of a tuplet as <b>containing</b> notes or other tuplets or both. Thus, in our example, the topmost tuplet contains three tuplets and a half note. Each of the tuplets contained by the topmost tuplet in turn contains five, three, and five notes respectively. If we add the measure, then we have a measure that contains a tuplet that contains tuplets that contain notes.
The structure of the measure with nested tuplets as we have just described it has two important properties:
<ol>
<li> It is a <b>hierarchic(al)</b> structure.
<li> It follows  <b>exclusive membership</b>, meaning that each element in the hierarchy (a note, a tuplet or a measure) has one and only one <b>parent</b>. In other words a single note is not contained in more than one tuplet at the same time, and no one tuplet is contained in more than one other tuplet at the same time. 
</ol>
What we are describing here is a tree, and it is the structure of Abjad <b>Containers</b>.
</p>
<p>
TREE FIGURE HERE.
</p>

<p>
While this tree structure seem like the right way to represent the relationships between the elements of a score, it is not enough. 
Consider the tuplet example again with the following beaming alternatives:
</p>
<abjad>
   hide> t21 = FixedMultiplierTuplet((4, 5), Note(0, (1, 8)) * 5)
   hide> t22 = FixedMultiplierTuplet((2, 3), Note(0, (1, 8)) * 3)
   hide> t23 = FixedMultiplierTuplet((4, 5), Note(0, (1, 16)) * 5)
   hide> t1  = FixedMultiplierTuplet((2, 3), [t21, t22, t23, Note(0, (1, 2))])
   hide> s = RhythmicStaff([t1])
   hide> Beam(t1[0:3])
   hide> show(s)
</abjad>

<abjad>
   hide> t21 = FixedMultiplierTuplet((4, 5), Note(0, (1, 8)) * 5)
   hide> t22 = FixedMultiplierTuplet((2, 3), Note(0, (1, 8)) * 3)
   hide> t23 = FixedMultiplierTuplet((4, 5), Note(0, (1, 16)) * 5)
   hide> t1  = FixedMultiplierTuplet((2, 3), [t21, t22, t23, Note(0, (1, 2))])
   hide> s = RhythmicStaff([t1])
   hide> Beam(t1[1:3])
   hide> show(s)
</abjad>

<abjad>
   hide> t21 = FixedMultiplierTuplet((4, 5), Note(0, (1, 8)) * 5)
   hide> t22 = FixedMultiplierTuplet((2, 3), Note(0, (1, 8)) * 3)
   hide> t23 = FixedMultiplierTuplet((4, 5), Note(0, (1, 16)) * 5)
   hide> t1  = FixedMultiplierTuplet((2, 3), [t21, t22, t23, Note(0, (1, 2))])
   hide> s = RhythmicStaff([t1])
   hide> Beam(t21[0:3])
   hide> Beam(s.leaves[3:7])
   hide> Beam(s.leaves[7:13])
   hide> show(s)
</abjad>

<p>
Clearly the beaming of notes can be totally independent from the tuplet groupings. Beaming across tuplet groups implies beaming across nodes in the tree structure, which means that the beams do not adhere to the <b>exclusive (parenthood) membership</b> characteristic of the tree. Beams must then be modeled independently as a separate and complementary structure. These are the Abjad <b>Spanners</b>.
</p>
<p>
Below we have the score of our tuplet example with alternative beaming and its the Leaf-Container-Spanner graph.
</p>
<abjad>
   hide> t21 = FixedMultiplierTuplet((4, 5), Note(0, (1, 8)) * 5)
   hide> t22 = FixedMultiplierTuplet((2, 3), Note(0, (1, 8)) * 3)
   hide> t23 = FixedMultiplierTuplet((4, 5), Note(0, (1, 16)) * 5)
   hide> t1  = FixedMultiplierTuplet((2, 3), [t21, t22, t23, Note(0, (1, 2))])
   hide> s = RhythmicStaff([t1])
   hide> Beam(t21[0:3])
   hide> Beam(s.leaves[3:7])
   hide> Beam(s.leaves[7:13])
   hide> show(s)
</abjad>
<p>
<img src="images/lcs_tuplet_spanned.png">
</p>

</subsection>

<subsection> Example 2

<p>
As a second example let's look at the last five measures of Bart√≥k's <i>Wandering</i> from Mikrokosmos vol. III. As simple as it may seem, these five measures carry with them a lot of information pertaining to musical notation.  
<p>
<img src="images/bartok_wandering.png"> 
</p>

<p>
There are many musical signs of different types on the pages: notes, dynamic markings, clefs, staves, slurs, etc.
These signs are structurally related to each other in different ways. 

Let's start by looking at the larger picture. The piano piece is written in two staves. As is customary, the staves are graphically grouped with a large curly brace attaching to them at the beginning or each system. Notice that each staff has a variety of signs associated with it. There are notes printed on the staff lines as well as meter indications and  bar lines. Each note, for example, is in one and only one staff. A note is never in two staves at the same time. This is also true of the measures. A measure in the top staff is not simultaneously drawn on the top staff and the bottom staff. It is better to think of each staff as having its own set of measures. Notice also that the notes in each staff fall within the region of one and only one measure, i.e. measures seem to <b>contain</b> notes (this is standard practice in musical notation, but it need not always be the case, as we'll see later). There is not one note that is at once in two measures. 
As we continue describing the relationships between the musical signs in the page, we begin to discover a certain structure, or a convenient way of structuring the score for conceptualization and manipulation. 

All the music in a piano score seems to be written in what we might call a "staff group". The staff group is <b>composed of</b> two staves. Each staff in turn seems to be composed of a series or measures, and each measure is composed of a series of notes.
So again we find that the score structure can be organized hierarchically as a tree.
This tree structure looks like this:
</p>
<p>
TREE FIGURE HERE.
</p>
<p>
Notice again though that there are elements in the score that imply and require a different kind of grouping. The two four eighth-note runs in the lower staff are beamed together across the bar line and, based on our tree structure, across tree nodes. So do the slurs, the dynamics markings and the <i>ritardando</i> indication at the top of the score. 
As we have seen in the tuplets example, all these groups running across the tree structure can be defined with <b>Spanners</b>.
</p>
</subsection>

</section>

<section> The LCS Model
<p>
Leaves include notes, rests, chords and skips. 
Containers include staves, voices, measures and tuplets.
Spanners include beams, trills, ties, glissandi, and pedal markings, among others.
</p>

<p>
The LCS model can be schematically visualized as a superposition of two complementary and completely independent layers of structure: a <b>tree</b> that includes the Containers and the Leaves, and a layer of free floating "connectors" or Spanners.
</p>

<p>
<center>
<img src="images/container_spanner.png">
</center>
</p>

<p>
There can be any number of Spanners, they may overlap, and they may "connect" to different levels of the tree hierarchy. 
The spanner attach to the elements of the tree, so a tree structure must exist for spanners to be made manifest.
</p>

</section>
