<h1>Pitch initialization</h1>

<subsection>

<p>Abjad provides four different ways to initialize <code>Pitch</code> objects.</p>

</subsection>

<subsection>By integer

<p>The usual way to instantiate <code>Pitch</code> objects is with integers.</p>

<abjad>
  abjad> Pitch(-10)
  Pitch(d, 3)
</abjad>

<abjad>
  abjad> Pitch(23)
  Pitch(b, 4)
</abjad>

</subsection>

<subsection>By float

<p>For quartertones, you can initialize <code>Pitch</code> with floats.</p>

<abjad>
  abjad> Pitch(12.0)
  Pitch(c, 5)
</abjad>

<abjad>
  abjad> Pitch(12.5)
  Pitch(cqs, 5)
</abjad>

</subsection>

<subsection>By name, octave

<p>Initalize <code>Pitch</code> with pitchclass and octave to specify accidentals explicitly.</p>

<abjad>
   abjad> Pitch('cs', 4)
   Pitch(cs, 4)
</abjad>

<abjad>
   abjad> Pitch('df', 4)
   Pitch(df, 4)
</abjad>

</subsection>

<subsection>By number, letter

<p>Abjad will supply the correct accidental for a pitch of a given number if you supply the pitch letter against which to notate.</p>

<abjad>
   abjad> Pitch(13, 'c')
   Pitch(cs, 5)
</abjad>

<abjad>
   abjad> Pitch(13, 'd')
   Pitch(df, 5)
</abjad>

</subsection>

<comments>

<p>Abjad implements the initialization schemes documented here as a collection of <strong>initializers</strong>.</p>

<p>Initializers are private classes that initialize Abjad classes and do nothing else.</p>

<p>Abjad pitch initializers live in <code>pitch/initializers.py</code>. Add new pitch initializers there.</p>

<p>Abjad allows empty pitch initialization with <code>Pitch( )</code>.
Future implementations of Abjad may deprecate this behavior.</p>

<p>
Abjad allows integer and float pitch arguments only.
Abjad does not allow pitch arguments of the form <code>Rational(3, 2)</code> or <code>(3, 2)</code>.
Use <code>1.5</code> instead.
</p>

<p>
Abjad produces accidentals from pitch numbers according to the table given in the appendix on <a href="../pitch_conventions/index.html">pitch conventions</a>.
Abjad does not yet allow the override of this behavior at pitch-instantiation time.
</p>

</comments>

<to-do>

<p>Abjad currently generates a <code>KeyError</code> for pitch arguments of the form <code>Rational(0, 2)</code> and <code>0.2</code> but should generate a custom exception instead.</p>

<p>
Design and implement some way to allow different acciental-assignment behaviors at note-instantiation time. 
The first strategy that comes to mind is the creation of a new Abjad cfg variable that can change during runtime &mdash; all sharps before instantiating an upward chromatic run, all flats before a downward chromatic run, etc.
</p>

</to-do>
