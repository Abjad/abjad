<h1>Measures overview</h1>

<subsection>

<p>Abjad implements a number of different measure classes to model different composition-time behaviors.</p>

<p>Use the unqualified <Measure> class for duration-scaling, or prolating, behavior. Measures of this sort allow meter duration and contents duration to mismatch. In the case of meter duration / contents duration mismatch, measure of this sort will wrap measure contents with a LilyPond <code>\scaleDurations { }</code> construct at format-time. The LilyPond <code>\scaleDurations { }</code> construct differs from the LilyPond tuplet-building <code>\times { }</code> construct in an important way. The LilyPond <code>\scaleDurations { }</code> construct inserts neither a tuplet bracket nor any other visible element of notation. Thus Abjad measures of this sort simply stretch of compress contents to match meter duration at format-time.</p>

<p>Use the <DynamicMeasure> class for a measure that determines its meter dynamically at format-time, in accorandance with contents duration. You can think of dynamic measures as growing or shrinking as appropriate to always match contents duration. Because of this, you never specify the meter of a dynamic measure; dynamic measures take care of deriving their own meters. You can, however, specify a preferred denominator for dynamic measure, indicating, for example, that the dynamic measure should format meters of the form 2/8 or 4/8 instead of 1/4 or 2/4.</p>

<p>Use the <AnonymousMeasure> class for as a special type of dynamic measure that not only determines its meter dynamically at format-time but also does not print the meter stencil, that is, refuses to render the meter in the score, taking up no horizontal space in the layout of the score. Use anonymous measures when you have musical content that you want to box up or contain but for which you wish to show no meter.<p>

<p>Use the <RigidMeasure> class for a measure that rigidly enforces a match between meter duration and contents duration. Use rigid measures when you know measure duration ahead of time and wish to enforce that duration at format-time. Note that you can work with rigid measures at composition time in many different ways. There is no requirement that meter duration and contents duration must match duration composition time as contents move into and out of the rigid measure; it is only at format-time, and, optionally, at check-time, that rigid measures will raise a <code>MisfilledMeasureError</code> should meter duration and contents duration not match.</p>

</subsection>

<comments>

<p>The Abjad <RigidMeasure> implements the functionality found most commonly in <i>Finale</i> and <i>Sibelius</i>. This is the model of <em>measure-as-inviolable-container</em> and is only one of several models of the measure implemented in Abjad.</p>

</comments>

<to-do>

<p>Rename the current measure classes so that the deafult <Measure> class forces contents duration to match meter duration.</p>

</to-do>
