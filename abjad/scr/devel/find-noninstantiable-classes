#! /usr/bin/env python
import inspect as stdlib_inspect
import os
from abjad import *


total_classes = 0
total_noninstantiable_classes = 0
noninstantiable_class_names = []
root = os.path.join(abjad_configuration.abjad_directory_path, 'tools')
crawler = documentationtools.ClassCrawler(root)

for abjad_class in crawler():
    total_classes += 1
    if stdlib_inspect.isabstract(abjad_class):
        continue
    if 'exception' in abjad_class.__module__:
        qualified_class_name = '.'.join(
            abjad_class.__module__.split('.')[-2:]
            )
    else:
        qualified_class_name = '.'.join(
            abjad_class.__module__.split('.')[-2:]
            )
    arguments = getattr(abjad_class, '_default_mandatory_input_arguments', [])
    arguments = [str(x) for x in arguments]
    if arguments:
        arguments = ', '.join(arguments)
    else:
        arguments = ''

    command = '{}({})'.format(qualified_class_name, arguments)
    try:
        eval(command)
    except:
        total_noninstantiable_classes += 1
        noninstantiable_class_names.append(qualified_class_name)

for noninstantiable_class_name in sorted(noninstantiable_class_names):
    print noninstantiable_class_name
print

print 'Total classes:                 {}'.format(total_classes)
print 'Total noninstaniable classes:  {}'.format(total_noninstantiable_classes)
print
