Note that as of r9872 it takes only 181 function calls to initialize the score manager ...

    >>> iotools.profile_expr('score_manager = scoremanagementtools.scoremanager.ScoreManager()')
    181 function calls in 0.000 seconds

... but that it takes 819,997 function calls to start and immediately quit the score manager
a first time and then significantly fewer function calls on successive tests:

    >>> iotools.profile_expr("score_manager.run(user_input='q')")
    819997 function calls (819894 primitive calls) in 0.734 seconds

    >>> iotools.profile_expr("score_manager.run(user_input='q')")
    241391 function calls in 0.220 seconds

    >>> iotools.profile_expr("score_manager.run(user_input='q')")
    241391 function calls in 0.220 seconds

CONCLUSION: don't know what's going on here but it's clear that the score manager takes
quite a few unnecessary steps on start-up. ScoreManager start up should be as simple
as listing the names of all scores in the system, possibly with the additional
work of inspecting each score package tag file for date of composition.
All of that should take far fewer than 820,000 function calls.
Optimizing score manager start up should save as much as 0.7 seconds on each
score manager-initiated test.

OBSERVATION: Note that the following ...

    def make_score_selection_menu(self):
        #menu, section = self.make_menu(where=self.where(), is_numbered=True, is_keyed=False)
        menu, section = self.make_menu(where='foo', is_numbered=True, is_keyed=False)
        section.tokens = self.score_package_wrangler.make_visible_asset_menu_tokens()
        return menu

... reduces score manager start-up from 820,000 function calls to 153,000 function calls.
Removing the call to self.where() removes the call to inspect.stack().
This was tricky to find because iotools.profile_expr('inspect.stack()') is lean.
The function must be called inside a complex stack to reveal its true cost.

CONCLUSION: Stack inspection can not be a mandatory part of menu creation
because stack inspection is expensive.
