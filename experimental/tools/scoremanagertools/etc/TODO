1.  Something takes a bunch of time. So optimize to make stuff take much less time.
    Possibly by removing unnecessary output_material.py module interpretation.
    Also possibly by removing all [safe_]imports() from the __init__.py files.
    First run profiler to avoid unnecessary tinkering.

2.  Make user input getter defaults work like menu defaults;
    Implement default_value on user input getter.

3.  Fix ScoreManagerObject.handle_user_input_with_default() default handling.

4.  Define range inventories for all scores.

5.  Implement material methods to move material packages from one location to another.

6.  Find a way to include tags management in hidden menu of every package proxy.

7.  Port output change awareness.

8.  Implement something to tour all materials everywhere and examine in sequence.

9.  Make user input handler creation work.

10. Edit instrument transposition.

11. Edit instrument clefs.

12. Remove extra appearance of B-flat clarinet from clarinetist config menu.

13. Change Instrument._default_performer_names to house (full, abbreviation) pairs.

14. Use performer abbreviations to populate performer selection menu.

15. Find a way to dynamically present (default) indicator to default menu entries.

16. Consider keyword backtracking protocol to replace self._session.push_backtrack() / self._session.pop_backtrack().

17. Distinguish positional editor parameters from keyword editor parameters.

* * *

18. Currently MaterialPackageMaker inherits from MaterialPackageProxy.
    Maybe MaterialPackageMaker should *have* a MaterialPackageProxy instead.
    This would clean up the inheritance schema somewhat.

19. Audit the UI of the entire materials management system by hand.

20. Add a scores/test directory and check it into the scores repository.
    Then add a scores/test/test_scores_import_scores.py file.
    The file will test 'import red_example_score', 'import green_example_score', and so on.
    This will be a very high-level test to make sure that entire score packages remain importable.

21. Consolidate scores to single repository.

22. Implement example_score_i.music.materials.divisions to import 
    example_score_i.music.materials.time_signatures.
    This will implement an intrapackage material import.
    Implement example_score_ii.music.materials.divisions to 
    import example_score_i.music.materials.time_signatures.
    This will implement an interpackage material import.

23. Remove ModuleProxy.unimport() entirely.

24. Replace all _read_only_attributes.py and _public_attributes.py test files with doctests.

25. Sweep inline scoremanagertools TODO items.

26. Author ScorePackageProxy docstrings.

27. Remove 'grandparent_directory_path'.

28. Make ScoreManagerConfiguration READ ONLY!

29. Revisit score_manager/configuration.py file.
    The only necessary user settings should be these:
        user_extensions_directory_path = /Users/trevorbaca/Documents/baca/scoremanager/extensions
        user_collateral_directory_path = /Users/trevorbaca/Documents/baca/scoremanager/collateral
        user_scores_directory_path = /Users/trevorbaca/Documents/scores
    * create ~/.score_manager by default and store configuration in it
    * store configuration.py in  ~/.score_manager
    * store transcripts in ~/.score_manager
    * store user editors in user extensions directory
    * store user material package makers in user extensions directory
    * store user materials in user collateral directory
    * store user specifiers in user collateral directory
    * store user stylesheets in user collateral directory

30. Create ~/Documents/baca/scoremanager to house these subdirectories:
        ~/Documents/baca/scoremanager/editors
        ~/Documents/baca/scoremanager/materialpackagemakers
        ~/Documents/baca/scoremanager/materials
        ~/Documents/baca/scoremanager/stylesheets

31. Remove the has_readable_... and is_readable_... properties from the system entirely.
    Force such functionality to be method calls that will be noticeably expensive.

32. Migrate all build_illustration.py modules from separate modules to bound class methods.

33. Add PackageystemAssetProxy to superclass ModuleProxy and PackageProxy.

34. Change DistributionDirectoryProxy.__init__(score_package_name=None) to score_package_path.
    Same with ExergueDirectoryProxy.
    Same with MusicPackageProxy.

35. Reimplement self._handle_main_menu_result methods around dictionaries.

36. Split recursif repositories.
    Then grep for 'recursif' and do whatever is necessary to remove from codebase.

37. Remove head=None keyword from list_storehouse_filesystem_paths().
    The head filter can be used only on complete *asset* paths (whether filesystem or packagesystem).
    The head filter can not beused on *storhouse* paths alone.

38. Add styleshset management to score manager main menu.

39. Might make sense to implement an SvnManager class.
    This will encapsulate all svn management functionality.

40. Create a PackagesystemAssetProxy to parallel PacakagesystemAssetWrangler.

41. Harmonize user input strings with method names in MaterialPackageProxy.user_input_to_action dictionary.
