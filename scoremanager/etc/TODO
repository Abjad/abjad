1.  Edit instrument transposition.

2.  Edit instrument clefs.

3.  Make user input getter defaults work like menu defaults.
    Implement default value on user input getter.

4.  Fix IOManager.handle_user_input() default handling.

5.  Define range inventories for all scores.

6.  Make user input handler creation work.

7.  Find a way dynamically to present default notice 
    with default menu entries.

8.  Distinguish positional editor parameters from keyword editor parameters.

9.  Implement something to tour all materials everywhere 
    and examine in sequence.

10. Audit the UI of the entire materials management system by hand.

11. Implement example_score_i.materials.divisions to import 
    example_score_i.materials.time_signatures.
    This will implement an intrapackage material import.
    Implement example_score_ii.materials.divisions to 
    import example_score_i.materials.time_signatures.
    This will implement an interpackage material import.

12. Replace all _read_only_attributes.py and _public_attributes.py 
    test files with doctests.

13. Sweep inline scoremanager TODO items.

14. Author ScorePackageManager docstrings.

15. Add PackageystemAssetManager to superclass ModuleManager and 
    PackageManager. PackagesystemAssetManager will parallel 
    PacakagesystemAssetWrangler.

16. Harmonize user input strings with method names in 
    MaterialPackageManager.user_input_to_action dictionary.

17. Author StylesheetFileWrangler.interactively_remove_assets() test.
    Will involve making pending_user_input='... rm ...' work with named 
    arguments instead of just numeric arguments.

18. Make MaterialPackageManager classes stop creating materials in 
    scoremanager.materialpackages.
    Those classes should create material packages in the user asset 
    library material packages directory.
    Or in user score packages. But no material packages should ever 
    be created in the built-in asset library material packages directory.

19. Implement material methods to move material packages 
    from one location to another.

20. Find a way to include metadata management in hidden menu 
    of every package manager.

21. Finish the docstrings for all io classes.

22. Audit all '*_file_name' variables in the system.
    Most are probably file path variables and should be renamed.
    Just run "abjad-ack _file_name" and inspect the output
    for score manager source files.

23. Beautify the code all of score manager and music expression test files.

24. Refactor scoremanager.editors to contain as few classes as possible.

25. Refactor score manager wizard classes to use instance attributes in place
    of class attributes.

26. Refactor score manager material package maker classes to use instance
    attributes in place of class attributes.

27. Implement a Session.display_variables() method to print the current value
    of all session variables to the terminal for user inspection.

28. Figure out the correct ajv replace regex to change tratiettore/music
    to just traiettorie.

29. Bug exists when making handmade material packages.
    Create the packge. Then [mde] to edit the material definition module.
    The last line in file reads like this:
        /Users/trevorbaca/Documents/scores/temporary/materials/foo = None

30. Move score/instrumentation.py module to score/materials packages.

31. Change ...
        from abjad.tools import indicatortools
        from abjad.tools import durationtools
    ... to just ...
        from abjad import *
    ... at the end of material output modules.

32. Include two blank lines after headers in material output modules.
    So that  ...

        # -*- encoding: utf-8 -*-
        fancy_list = ['foo', 'bar', 'blah', 17]

    ... becomes ...

        # -*- encoding: utf-8 -*-

        
        fancy_list = ['foo', 'bar', 'blah', 17]

    ... instead.

33. Make material package illustration work again.
    (score > materials > tempo inventory > pdfm) is the command sequence.

34. Make tempo inventory editor (score > materials > tempo inventory) display
    custom identifier of tempo inventory when custom identifier has been
    defined; alternatively, remove custom_identifier from TempoInventory
    entirely; use user-given package name instead.

35. Stop sprinkling empty __metadata__.py moudles in directories:
        .../materialpackagemanagers/stylesheets/__metadata__.py
        .../materialpackagemanagers/test/__metadata__.py
    And remove empty ...
        .../materialpackagemanagers/user_input.py
    ... module, too.

36. Reformat ScoreManagerConfiguration to better follow the implementation
    pattern of AbjadConfiguration. Make built_in_editors_directory_path
    and so on into full-fledged public properties with doc strings.

37. Make the (u), (k), (m), (g), (s), (t) and (y) commands work from anywhere
    within a score. Maybe the commands should be (U), (K), (M), (G), (S), (T)
    and (Y) for clarity.

38. There also needs to be a single command to just view the global stylesheet
    for the entire score. Something like (YV) or equivalent.

39. Find a way to get rid of the ...

    if __name__ == '__main__':
        segment = Segment()
        lilypond_file = segment()
        current_directory_path = os.path.dirname(__file__)
        systemtools.log_render_lilypond_input(
            lilypond_file,
            output_directory_path=current_directory_path,
            output_file_name_root='output',
            )

    ... at the bottom of each segment definition file.
    There should be a way to call a prebuilt external script
    that does exactly the same thing.

40. There should be a command to re-render the output.ly for a given segment,
    not by re-executing the associated segment maker, but simply by running
    LilyPond.

41. Remove FileWrangler and just use FilesystemAssetWrangler instead?

42. Change metadata_module_name to metadata_module_path.
