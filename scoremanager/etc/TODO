1.  Edit instrument transposition.

2.  Make user input getter defaults work like menu defaults.
    Implement default value on user input getter.

3.  Fix IOManager.handle_user_input() default handling.

4.  Find a way dynamically to present default notice with default menu entries.

5.  Distinguish positional editor parameters from keyword editor parameters.

6.  Implement navigation to tour all materials everywhere 
    and examine in sequence.

7.  Audit the UI of the entire materials management system by hand.

8. Harmonize user input strings with method names in 
    MaterialPackageManager.user_input_to_action dictionary.

9.  Implement example_score_i.materials.divisions to import 
    example_score_i.materials.time_signatures.
    This will implement an intrapackage material import.
    Implement example_score_ii.materials.divisions to 
    import example_score_i.materials.time_signatures.
    This will implement an interpackage material import.

10. Replace all _read_only_attributes.py and _public_attributes.py 
    test files with doctests.

11. Sweep inline scoremanager TODO items.

12. Author ScorePackageManager docstrings.

13. Author StylesheetFileWrangler.interactively_remove_assets() test.
    Will involve making pending_user_input='... rm ...' work with named 
    arguments instead of just numeric arguments.

14. Make MaterialPackageManager classes stop creating materials in 
    the scoremanager/materialpackages/ directory.
    Those classes should create material packages in the user asset 
    library material packages directory.
    Or in user score packages. But no material packages should ever 
    be created in the scoremanager/materialpackages/ directory.

15. Implement material methods to move material packages 
    from one location to another.

16. Finish the docstrings for all io classes.

17. Refactor scoremanager.editors to contain as few classes as possible.

18. Refactor score manager wizard classes to use instance attributes in place
    of class attributes.

19. Refactor material package maker classes to use instance
    attributes in place of class attributes.

20. Figure out the correct ajv replace regex to change tratiettore/music
    to just traiettorie.

21. Move score/instrumentation.py module to score/materials packages.
    Maybe easiest to do this by creating an
    InstrumentationSpecifierMaterialPackageManager.

22. Make material package illustration work again.
    (score > materials > tempo inventory > pdfm) is the command sequence.

23. Remove empty ...
        .../materialpackagemanagers/user_input.py
    ... module.

24. These four classes can all be collapsed into one:
        wizards.HandlerCreationWizard
        wizards.ArticulationHandlerCreationWizard
        wizards.DynamicHandlerCreationWizard
        wizards.RhythmMakerCreationWizard

25. Clean up MaterialPackageManager. It's by far the biggest component and the
    most complex.

26. Reformat ScoreManagerConfiguration to better follow the implementation
    pattern of AbjadConfiguration. Make built_in_editors_directory_path
    and so on into full-fledged public properties with doc strings.
    Consider having ScoreManagerConfiguration inherit from AbjadConfiguration.
    This will parallel score manager IOManager inheriting from mainline
    IOManager.

27. Make the (u), (k), (m), (g), (s), (t) and (y) commands work from anywhere
    within a score. Leave the commands lowercase. Add (s) and (h) to the list,
    too.

28. There also needs to be a single command to just view the global stylesheet
    for the entire score. Something like (Y) or equivalent.

29. Find a way to get rid of the ...

    if __name__ == '__main__':
        segment = Segment()
        lilypond_file = segment()
        current_directory_path = os.path.dirname(__file__)
        systemtools.log_render_lilypond_input(
            lilypond_file,
            output_directory_path=current_directory_path,
            output_file_name_root='output',
            )

    ... at the bottom of each segment definition file.
    There should be a way to call a prebuilt external script
    that does exactly the same thing.

30. Eliminate unqualified test files like test_ScorePackageManager.py.

31. Remove bug that allows for creation of ...
        metadata = collections.OrderedDict([
            ('', ''),
            ])
    ... without allowing for removal.

32. Add other commands to 'ls'. Commands should include ls variants to show
    time of modification and size. Probably other filesystem commands, too.

33. Replace the self.has_whatever_module properties (or methods)
    with just os.path.isfile(self.whatever_file_path) instead.

34. Figure out why so many tests are commented-out at the bottom of
    test_MaterialPackageWrangler_run_managermade_package.

35. Removed MarkupInventoryMaterialPackageManager.illustration_builder().
    Use MarkupInventory.__ilustrate__() instead.

36. Write test for (ren) to rename, for example, red_markup to red_markup.
    Currently fails. Reproduce failure by creating a material package that
    is managed by MarkupInventoryMaterialPackageManager.

37. Rename built-in material packages from ...
        red_forte
        red_marcati
        red_markup
        red_notes
        red_numbers
        red_sargasso_measures
    ... to ...
        example_dynamic_inventory
        example_articulation_inventory
        example_markup_inventory
        example_notes
        example_numbers
        example_sargasso_measures
    ... which will also be an opportunity to fix and secure rename code.
    This will reduce confusion with Red Example Score.
    Red Example Score is unrelated to example material packages.

38. Write test to make sure that ...
        # -*- encoding: utf-8 -*-
        from abjad import *
        output_material_module_import_statements = []


        some_material = None
    ... shows up as the exact file contents in response to (materials) > (nmh)
    > ... > (mde).

39. Change 'score segments (g)', 'score setup (s)' and 'score templates (t)'
    to just 'segments (g)', 'setup (s)' and 'templates (t)'.

40. Change menu command display strings to 'direct object - verb' pervasively.

41. Make sure that editing instrumentation doesn't change FrenchHorn to merely
    Instrument.
    Maker sure that editing instrumentation doesn't reset
    sounding_pitch_of_written_middle_c to C4.

42. Make (next) and (prev) work again.

43. Replace hard-coded 'vi -R {}' commands with a portable io manager method.

44. Implement __format__ on IOTranscript.

45. Make all session variables read-only.
